
// Mitsuku api is used to get the response for your question.
var m = require('mitsuku-api')();
 

exports.handler = (event, context, callback) => {
    try {
    var http = require('http');
    if (event.session.new) {
      // New Session
      console.log("NEW SESSION");
    }

    switch (event.request.type) {
//ON Launch Intent
      case "LaunchRequest":
        // Launch Request
        console.log(`LAUNCH REQUEST`);
        m.send('hello world')
  .then(function(response){
    //The response which is fed to the buildSpeechletResponse is the Response
    // being generated by the Mitsuku Api
    context.succeed(
          generateResponse(
            buildSpeechletResponse(response, false),
            {}
          )
        );
  });

        break;

      case "IntentRequest":
        switch(event.request.intent.name){
            //ON Intent Request, When you ask anything after invoking the Skill
            case "askbot":
                var text;
                console.log("send")
                if(event.request.intent.slots.ques.value){
                    text = event.request.intent.slots.ques.value;
                }
                text = text+'     .';
                // Checks the input for bye and the end the session.
                if(text == 'bye'){
                m.send(text)
  .then(function(response){
    context.succeed(
          generateResponse(
            buildSpeechletResponse(response, true),
            {}
          )
        );
  });
                }else{
                m.send(text)
  .then(function(response){
    context.succeed(
          generateResponse(
            buildSpeechletResponse(response, false),
            {}
          )
        );
  });
                }
                
                    break;
        

            
        }
        // Intent Request
        //console.log(`INTENT REQUEST`)
        //context.succeed(
        //  generateResponse(
        //    buildSpeechletResponse("Hello,"+event.request.intent.slots.username.value, true),
        //    {}
        //  )
        //)
        break;

      case "SessionEndedRequest":
        // Session Ended Request
        console.log(`SESSION ENDED REQUEST`);
        break;

      default:
        context.fail(`INVALID REQUEST TYPE: ${event.request.type}`);

    }

  } catch(error) { context.fail(`Exception: ${error}`) }





}

    


// Helpers Functions
buildSpeechletResponse = (outputText, shouldEndSession) => {

  return {
    outputSpeech: {
      type: "PlainText",
      text: outputText
    },
    shouldEndSession: shouldEndSession
  }

}

generateResponse = (speechlet, sessionAttributes) => {

  return {
    version: "1.0",
    sessionAttributes: sessionAttributes,
    response: speechlet
  }
}





